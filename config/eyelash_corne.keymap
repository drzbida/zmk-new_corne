#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        NUMSYM: NUMSYM {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMSYM";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 0>;
        };

        WINALT: WINALT {
            compatible = "zmk,behavior-tap-dance";
            label = "WINALT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&kp LEFT_ALT>;
        };

        hti: hti {
            compatible = "zmk,behavior-hold-tap";
            label = "HTI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <75>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <23 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R      &kp T                              &mmv MOVE_UP                     &kp Y                &kp U          &kp I      &kp O    &none  &none
&kp LSHFT  &kp A  &kp S  &kp D  &kp F      &kp G              &mmv MOVE_LEFT  &mkp MB1        &mmv MOVE_RIGHT  &kp H                &kp J          &kp K      &kp L    &kp P  &none
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V      &kp B     &none                    &mmv MOVE_DOWN                   &kp N                &kp M          &kp COMMA  &kp DOT  &none  &none
                         &mo 1  &kp SPACE  &kp LGUI                                                            &hti LEFT_ALT ENTER  &kp BACKSPACE  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        raise_layer {
            bindings = <
&trans  &hti F1 NUMBER_1  &hti F2 NUMBER_2  &hti F3 NUMBER_3  &mt F4 NUMBER_4  &hti F5 N5                            &msc SCRL_UP                     &hti F6 NUMBER_6  &hti F7 N7  &hti F8 N8  &hti F9 N9  &hti F10 N0  &hti F11 B
&trans  &trans            &trans            &trans            &key_repeat      &trans                &msc SCRL_LEFT  &mkp MB2        &msc SCRL_RIGHT  &kp LEFT          &kp DOWN    &kp UP      &kp RIGHT   &none        &hti F12 B
&trans  &trans            &trans            &trans            &trans           &trans      &trans                    &msc SCRL_DOWN                   &trans            &trans      &trans      &trans      &trans       &trans
                                            &trans            &kp SPACE        &trans                                                                 &kp RET           &kp BSPC    &trans
            >;

            label = "NUMBER";
        };

        symbol_layer {
            bindings = <
&trans  &kp GRAVE      &kp LS(LT)    &kp LS(GT)  &kp MINUS  &kp LS(PIPE)                     &trans          &kp LS(CARET)  &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(DLLR)   &kp LS(UNDER)  &trans
&trans  &kp LS(EXCL)   &kp LS(STAR)  &kp FSLH    &kp EQUAL  &kp LS(AMPS)             &trans  &trans  &trans  &kp LS(POUND)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(COLON)  &kp LS(DQT)    &kp BSLH
&trans  &kp LS(TILDE)  &kp LS(PLUS)  &kp LBKT    &kp RBKT   &kp LS(PRCNT)  &trans            &trans          &kp LS(AT)     &kp SEMI      &kp COMMA     &kp DOT        &kp SQT        &kp LS(QMARK)
                                     &trans      &kp SPACE  &trans                                           &kp RET        &kp BSPC      &trans
            >;
        };
    };
};
